{"version":3,"sources":["froalaEditorFunctionality.js","froalaEditor.js","froalaEditorA.js","froalaEditorButton.js","froalaEditorImg.js","froalaEditorInput.js","froalaView.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"app.js","sourcesContent":["var FroalaEditorFunctionality = {\n\n  // Tag on which the editor is initialized.\n  tag: null,\n  defaultTag: 'div',\n  listeningEvents: [],\n\n  // Jquery wrapped element.\n  $element: null,\n\n  // Editor element.\n  $editor: null,\n\n  // Editor options config\n  config: {\n    immediateReactModelUpdate: false,\n    reactIgnoreAttrs: null\n  },\n\n  editorInitialized: false,\n\n  SPECIAL_TAGS: ['img', 'button', 'input', 'a'],\n  INNER_HTML_ATTR: 'innerHTML',\n  hasSpecialTag: false,\n\n  oldModel: null,\n\n  // Before first time render.\n  componentWillMount: function() {\n    this.tag = this.props.tag || this.defaultTag;\n  },\n\n  // After first time render.\n  componentDidMount: function() {\n\n    var tagName = this.refs.el.tagName.toLowerCase();\n    if (this.SPECIAL_TAGS.indexOf(tagName) != -1) {\n\n      this.tag = tagName;\n      this.hasSpecialTag = true;\n    }\n\n    if (this.props.onManualControllerReady) {\n      this.generateManualController();\n    } else {\n      this.createEditor();\n    }\n  },\n\n  componentWillUnmount: function() {\n    this.destroyEditor();\n  },\n\n  componentDidUpdate: function() {\n\n    if (JSON.stringify(this.oldModel) == JSON.stringify(this.props.model)) {\n      return;\n    }\n\n    this.setContent();\n  },\n\n  createEditor: function() {\n\n    if (this.editorInitialized) {\n      return;\n    }\n\n    this.config = this.props.config || this.config;\n\n    this.$element = $(this.refs.el);\n\n    this.setContent(true);\n\n    this.registerEvents();\n    this.$editor = this.$element.froalaEditor(this.config).data('froala.editor').$el;\n    this.initListeners();\n\n    this.editorInitialized = true;\n  },\n\n  setContent: function(firstTime) {\n\n    if (!this.editorInitialized && !firstTime) {\n      return;\n    }\n\n    if (this.props.model || this.props.model == '') {\n\n      this.oldModel = this.props.model;\n\n      if (this.hasSpecialTag) {\n        this.setSpecialTagContent();\n      } else {\n        this.setNormalTagContent(firstTime);\n      }\n    }\n  },\n\n  setNormalTagContent: function(firstTime) {\n\n    var self = this;\n\n    function htmlSet() {\n\n      self.$element.froalaEditor('html.set', self.props.model || '', true);\n      //This will reset the undo stack everytime the model changes externally. Can we fix this?\n      self.$element.froalaEditor('undo.reset');\n      self.$element.froalaEditor('undo.saveStep');\n    }\n\n    if (firstTime) {\n      this.registerEvent(this.$element, 'froalaEditor.initialized', function () {\n        htmlSet();\n      });\n    } else {\n      htmlSet();\n    }\n\n  },\n\n  setSpecialTagContent: function() {\n\n    var tags = this.props.model;\n\n    // add tags on element\n    if (tags) {\n\n      for (var attr in tags) {\n        if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\n          this.$element.attr(attr, tags[attr]);\n        }\n      }\n\n      if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\n        this.$element[0].innerHTML = tags[this.INNER_HTML_ATTR];\n      }\n    }\n  },\n\n  destroyEditor: function() {\n\n    if (this.$element) {\n\n      this.listeningEvents && this.$element.off(this.listeningEvents.join(\" \"));\n      this.$editor.off('keyup');\n      this.$element.froalaEditor('destroy');\n      this.listeningEvents.length = 0;\n      this.$element = null;\n      this.editorInitialized = false;\n    }\n  },\n\n  getEditor: function() {\n\n    if (this.$element) {\n      return this.$element.froalaEditor.bind(this.$element);\n    }\n    return null;\n  },\n\n  generateManualController: function() {\n\n    var self = this;\n    var controls = {\n      initialize: this.createEditor,\n      destroy: this.destroyEditor,\n      getEditor: this.getEditor,\n    };\n\n    this.props.onManualControllerReady(controls);\n  },\n\n  updateModel: function() {\n\n    if (!this.props.onModelChange) {\n      return;\n    }\n\n    var modelContent = '';\n\n    if (this.hasSpecialTag) {\n\n      var attributeNodes = this.$element[0].attributes;\n      var attrs = {};\n\n      for (var i = 0; i < attributeNodes.length; i++ ) {\n\n        var attrName = attributeNodes[i].name;\n        if (this.config.reactIgnoreAttrs && this.config.reactIgnoreAttrs.indexOf(attrName) != -1) {\n          continue;\n        }\n        attrs[attrName] = attributeNodes[i].value;\n      }\n\n      if (this.$element[0].innerHTML) {\n        attrs[this.INNER_HTML_ATTR] = this.$element[0].innerHTML;\n      }\n\n      modelContent = attrs;\n    } else {\n\n      var returnedHtml = this.$element.froalaEditor('html.get');\n      if (typeof returnedHtml === 'string') {\n        modelContent = returnedHtml;\n      }\n    }\n\n    this.oldModel = modelContent;\n    this.props.onModelChange(modelContent);\n  },\n\n  initListeners: function() {\n    var self = this;\n\n    // bind contentChange and keyup event to froalaModel\n    this.registerEvent(this.$element, 'froalaEditor.contentChanged',function () {\n      self.updateModel();\n    });\n    if (this.config.immediateReactModelUpdate) {\n      this.registerEvent(this.$editor, 'keyup', function () {\n        self.updateModel();\n      });\n    }\n  },\n\n  // register event on jquery editor element\n  registerEvent: function(element, eventName, callback) {\n\n    if (!element || !eventName || !callback) {\n      return;\n    }\n\n    this.listeningEvents.push(eventName);\n    element.on(eventName, callback);\n  },\n\n  registerEvents: function() {\n\n    var events = this.config.events;\n    if (!events) {\n      return;\n    }\n\n    for (var event in events) {\n      if (events.hasOwnProperty(event)) {\n        this.registerEvent(this.$element, event, events[event]);\n      }\n    }\n\n  }\n};\n\nexport default FroalaEditorFunctionality;\n","import React from 'react';\nimport FroalaEditorFunctionality from './froalaEditorFunctionality.js';\n\nvar FroalaEditor = React.createClass({\n  mixins: [FroalaEditorFunctionality],\n  render: function() {\n    return (\n      <this.tag ref='el'>{this.props.children}</this.tag>\n    );\n  }\n});\n\nexport default FroalaEditor;","import React from 'react';\nimport FroalaEditorFunctionality from './froalaEditorFunctionality.js';\n\nvar FroalaEditorA = React.createClass({\n\n  mixins: [FroalaEditorFunctionality],\n  render: function() {\n    return (\n      <a ref='el'>{this.props.children}</a>\n    );\n  }\n});\n\nexport default FroalaEditorA;","import React from 'react';\nimport FroalaEditorFunctionality from './froalaEditorFunctionality.js';\n\nvar FroalaEditorButton = React.createClass({\n\n  mixins: [FroalaEditorFunctionality],\n  render: function() {\n    return (\n      <button ref='el'>{this.props.children}</button>\n    );\n  }\n});\n\nexport default FroalaEditorButton;","import React from 'react';\nimport FroalaEditorFunctionality from './froalaEditorFunctionality.js';\n\nvar FroalaEditorImg = React.createClass({\n\n  mixins: [FroalaEditorFunctionality],\n  render: function() {\n    return (\n      <img ref='el'/>\n    );\n  }\n});\n\nexport default FroalaEditorImg;","import React from 'react';\nimport FroalaEditorFunctionality from './froalaEditorFunctionality.js';\n\nvar FroalaEditorInput = React.createClass({\n\n  mixins: [FroalaEditorFunctionality],\n  render: function() {\n    return (\n      <input ref='el'/>\n    );\n  }\n});\n\nexport default FroalaEditorInput;","import React from 'react';\n\nvar FroalaView = React.createClass({\n\n  defaultTag: 'div',\n\n  getTrustedHtml: function() {\n    return {__html: this.props.model};\n  },\n\n  render: function() {\n    this.tag = this.props.tag || this.defaultTag;\n    return (\n      <this.tag className='fr-view' dangerouslySetInnerHTML={this.getTrustedHtml()}></this.tag>\n    );\n  }\n});\n\nexport default FroalaEditorView;","\n\nvar Sample1 = React.createClass({\n\n  config: {\n    placeholderText: 'Add a Title',\n    charCounterCount: false,\n    toolbarInline: true,\n    events: {\n      'froalaEditor.initialized': function() {\n        console.log('initialized');\n      }\n    }\n  },\n\n  getInitialState: function() {\n    return {myTitle: ''};\n  },\n\n  handleModelChange: function(model) {\n    this.setState({myTitle: model});\n  },\n\n  handleInputChange: function(e) {\n    this.setState({myTitle: e.target.value});\n  },\n\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample 1: Inline Edit</h2>\n        <FroalaEditor\n          tag='textarea'\n          config={this.config}\n          model={this.state.myTitle}\n          onModelChange={this.handleModelChange}\n        />\n        <input value={this.state.myTitle} onChange={this.handleInputChange}/>\n      </div>\n    );\n  }\n});\n\nvar Sample2 = React.createClass({\n\n  getInitialState: function() {\n    return {content: '<span>My Document\\'s Title</span>'};\n  },\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample2: Full Editor</h2>\n        <FroalaEditor\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n        <h4>Rendered Content:</h4>\n        <FroalaView\n          model={this.state.content}\n        />\n      </div>\n    );\n  }\n});\n\nvar Sample3 = React.createClass({\n\n  getInitialState: function() {\n    return {content: '<span>My Document\\'s Title</span>'};\n  },\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample3: Two way binding</h2>\n        <FroalaEditor\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n        <FroalaEditor\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n      </div>\n    );\n  }\n});\n\nvar Sample4 = React.createClass({\n\n  getInitialState: function() {\n    return {\n      initControls: null\n    };\n  },\n\n  deleteAll: function() {\n    if (!this.state.initControls) {\n      return;\n    }\n    this.state.initControls.getEditor()('html.set', '');\n    this.state.initControls.getEditor()('undo.reset');\n    this.state.initControls.getEditor()('undo.saveStep');\n  },\n\n  handleController: function(initControls) {\n\n    this.initControls = initControls;\n    this.setState({initControls: initControls});\n  },\n\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n\n  initializeEditor: function() {\n    this.state.initControls.initialize();\n    this.setState({initControls: this.state.initControls});\n  },\n\n  destroyEditor: function() {\n    this.state.initControls.destroy();\n    this.setState({initControls: this.state.initControls});\n  },\n\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample 4: Manual Initialization</h2>\n        {this.state.initControls ?\n            <button className=\"manual\" onClick={this.initializeEditor}>Initialize Editor</button>\n            :\n          null\n        }\n        {this.state.initControls && this.state.initControls.getEditor() ?\n          <span>\n            <button className=\"button\" onClick={this.destroyEditor}>Close Editor</button>\n            <button className=\"button\" onClick={this.deleteAll}>Delete All</button>\n          </span>\n            :\n          null\n        }\n        <FroalaEditor\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n          onManualControllerReady={this.handleController}\n        >\n          Check out the <a href=\"https://www.froala.com/wysiwyg-editor\">Froala Editor</a>\n        </FroalaEditor>\n      </div>\n    );\n  }\n});\n\nvar Sample5 = React.createClass({\n\n  config: {\n    reactIgnoreAttrs: ['tmpattr']\n  },\n  getInitialState: function() {\n    return {content: {src: '../src/image.jpg', id: 'froalaEditor', tmpattr: 'This attribute will be ignored on change.'}};\n  },\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample 5: Editor on 'img' tag. Two way binding.</h2>\n        <FroalaEditorImg\n          config={this.config}\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n        <FroalaEditorImg\n          config={this.config}\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n        <h4>Model Obj:</h4>\n        <div>{JSON.stringify(this.state.content)}</div>\n      </div>\n    );\n  }\n});\n\nvar Sample6 = React.createClass({\n\n  getInitialState: function() {\n    return {content: {innerHTML: 'Click Me'}};\n  },\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample 6: Editor on 'button' tag</h2>\n        <FroalaEditorButton\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n        <h4>Model Obj:</h4>\n        <div>{JSON.stringify(this.state.content)}</div>\n      </div>\n    );\n  }\n});\n\nvar Sample7 = React.createClass({\n\n  getInitialState: function() {\n    return {content: {placeholder: 'I am an input!'}};\n  },\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample 7: Editor on 'input' tag</h2>\n        <FroalaEditorInput\n          model={this.state.content}\n          onModelChange={this.handleModelChange}\n        />\n        <h4>Model Obj:</h4>\n        <div>{JSON.stringify(this.state.content)}</div>\n      </div>\n    );\n  }\n});\n\nvar Sample8 = React.createClass({\n\n  getInitialState: function() {\n    return {\n      content: {\n        href: 'https://www.froala.com/wysiwyg-editor'\n      },\n      initControls: null\n    };\n  },\n\n  deleteAll: function() {\n    if (!this.state.initControls) {\n      return;\n    }\n    this.state.initControls.getEditor()('html.set', '');\n    this.state.initControls.getEditor()('undo.reset');\n    this.state.initControls.getEditor()('undo.saveStep');\n  },\n\n  handleController: function(initControls) {\n\n    this.initControls = initControls;\n    this.setState({initControls: initControls});\n  },\n\n  handleModelChange: function(model) {\n    this.setState({content: model});\n  },\n\n  initializeEditor: function() {\n    this.state.initControls.initialize();\n    this.setState({initControls: this.state.initControls});\n  },\n\n  destroyEditor: function() {\n    this.state.initControls.destroy();\n    this.setState({initControls: this.state.initControls});\n  },\n  render: function() {\n    return(\n      <div className=\"sample\">\n        <h2>Sample 8: Editor on 'a' tag. Manual Initialization</h2>\n        {this.state.initControls ?\n            <button className=\"manual\" onClick={this.initializeEditor}>Initialize Editor</button>\n            :\n          null\n        }\n        {this.state.initControls && this.state.initControls.getEditor() ?\n          <span>\n            <button className=\"button\" onClick={this.destroyEditor}>Close Editor</button>\n            <button className=\"button\" onClick={this.deleteAll}>Delete All</button>\n          </span>\n            :\n          null\n        }\n        <div>\n          <FroalaEditorA\n            model={this.state.content}\n            onModelChange={this.handleModelChange}\n            onManualControllerReady={this.handleController}\n          >\n            Froala Editor\n          </FroalaEditorA>\n        </div>\n      </div>\n    );\n  }\n});\n\n\nvar Demo = React.createClass({\n\n  render: function() {\n    return (\n      <div>\n        <h1>React adapter for the Froala WYSIWYG editor</h1>\n        <Sample1/>\n        <Sample2/>\n        <Sample3/>\n        <Sample4/>\n        <Sample5/>\n        <Sample6/>\n        <Sample7/>\n        <Sample8/>\n      </div>\n    );\n  }\n});\n\nReactDOM.render(\n  <Demo/>,\n  document.getElementById('content')\n);"]}